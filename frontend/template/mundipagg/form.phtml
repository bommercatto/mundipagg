<?php
/**
 * Uecommerce
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Uecommerce EULA.
 * It is also available through the world-wide-web at this URL:
 * http://www.uecommerce.com.br/
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade the extension
 * to newer versions in the future. If you wish to customize the extension
 * for your needs please refer to http://www.uecommerce.com.br/ for more information
 *
 * @category   Uecommerce
 * @package    Uecommerce_Mundipagg
 * @copyright  Copyright (c) 2012 Uecommerce (http://www.uecommerce.com.br/)
 * @license    http://www.uecommerce.com.br/
 */

/**
 * Mundipagg Payment module
 *
 * @category   Uecommerce
 * @package    Uecommerce_Mundipagg
 * @author     Uecommerce Dev Team
 */

//Return Standard model
$standard = $this->getStandard();

// Payment Methods
$paymentMethods = $standard->getPaymentMethods();

// Get Shipping Address Quote
$data = $standard->getQuote()->getShippingAddress();

// We check if taxvat is enabled
$_taxvat = $this->getLayout()->createBlock('customer/widget_taxvat');

// Get current currency symbol
$currencySymbol = Mage::app()->getLocale()->currency(Mage::app()->getStore()->getCurrentCurrencyCode())->getSymbol();

// Min installment value
$valorMinParcelamento = $standard->getConfigData('parcelamento_min');

//Credit Card Saved On File
$ccs = $this->getCcs();
?>
<style type="text/css">
.issuers{
	text-align: center;
	padding-right: 10px;
}
</style>
<?php
// If no payment methods selected in backoffice we throw an error
if( count($paymentMethods) == 0 ) {
?>
<p style="color:red;">
	<?php echo Mage::helper('mundipagg')->__('Select a payment method from backoffice');?>
</p>
<?php
}
elseif(count($paymentMethods) == 1 ) {
	$js_class = 'required-entry';
	$style = "display:block;";
}
else {
	$js_class = 'validate-one-required-by-name';
	$style = "display:none;";
}

$_code = $this->getMethodCode();
?>
<fieldset class="form-list">
	<ul id="payment_form_<?php echo $_code ?>" style="display:none;<?php if(count($paymentMethods)>1):?>padding-left:15px<?php endif ?>">
		<div>
    		<input type="hidden" id="baseGrandTotal" name="baseGrandTotal" value="<?php echo number_format($data->getBaseGrandTotal(), "2", ",", ""); ?>"/>
    	</div>
        <?php 
        // Remove BoletoBancario payment method in order to loop into Credit Cards payment methods
        if(($key = array_search('BoletoBancario', $paymentMethods)) !== false):
		    unset($paymentMethods[$key]);
		endif;

		// START CREDIT CARD PAYMENT METHOD
        foreach ($paymentMethods as $key => $paymentMethod):
        	$num = substr($paymentMethod, 0, 1);

        	switch ($paymentMethod):
        		case '1CreditCards':
        			$min = 0;
        			$paymentMethodLabel = $this->__('Credit Card');
        			break;
        		
        		case '2CreditCards':
        			$min = $standard->getConfigData('two_credit_cards_from');
        			$paymentMethodLabel = $this->__('Pay with 2 Credit Cards');
        			break;

        		case '3CreditCards':
        			$min = $standard->getConfigData('three_credit_cards_from');
        			$paymentMethodLabel = $this->__('Pay with 3 Credit Cards');
        			break;

        		case '4CreditCards':
        			$min = $standard->getConfigData('four_credit_cards_from');
        			$paymentMethodLabel = $this->__('Pay with 4 Credit Cards');
        			break;

        		case '5CreditCards':
        			$min = $standard->getConfigData('five_credit_cards_from');
        			$paymentMethodLabel = $this->__('Pay with 5 Credit Cards');
        			break;
        	endswitch;

        	if ( $data->getGrandTotal() >= $min): ?>
	       	<li>
	        	<?php
	    		if( count($standard->getPaymentMethods()) > 1 ):
	    		?>
	                <label>
	                	<input type="radio" id="mundipagg_type" name="payment[mundipagg_type]" title="<?php echo Mage::helper('mundipagg')->__("forma_pagamento") ?>" value="<?php echo $paymentMethod; ?>" class="radio <?php echo $js_class;?> <?php if(count($standard->getPaymentMethods()) == 1){echo 'checked="checked"';}?>" onclick="hide_methods('<?php echo $paymentMethod; ?>');"> <?php echo $paymentMethodLabel ?>
	                </label><br/>
	            <?php else: ?>
	        		<input type="hidden" id="mundipagg_type" name="payment[mundipagg_type]" value="<?php echo $paymentMethod; ?>"/>
	        	<?php endif; ?>

	        	<div id="<?php echo $paymentMethod; ?>" style="<?php echo $style;?>">
	        		<?php if($num != 1): ?>
	    				<p></p>
	    				<div style="margin-left: 18px;">
	    					<b><?php echo $this->__('Grand Total') ?>:</b> <?php echo $currencySymbol.number_format($data->getGrandTotal(), "2", ",", "."); ?>
	    				</div>
	    				<p></p>
	    			<?php endif ?>
                    <ul style="margin-left: 18px;">
                    	<?php for($c=1;$c<=$num;$c++): ?>
                			<?php if( count($ccs) > 0 ):?>
	                    		<li class="fields" style="margin-bottom: 5px;">
	                    			<div class="field">
	                    				<label><?php echo $this->__('Select a Credit Card or add a new one') ?><span class="required">*</span></label>
		                    			<div class="input-box">
				                    		<select id="<?php echo $paymentMethod; ?>_token_<?php echo $num; ?>_<?php echo $c;?>" name="payment[<?php echo $paymentMethod; ?>_token_<?php echo $num; ?>_<?php echo $c;?>]" class="required-entry" onchange="token_or_not(<?php echo $num; ?>,<?php echo $c;?>)">
				                    			<option value="">...</option>
					                    		<?php
					                    		$selected = '';
					                    		
					                    		if(count($ccs) == 1):
					                    			$selected = 'selected="selected"';
					                    		endif;

												foreach($ccs as $id => $cc):
													echo '<option value="'.$cc->getId().'" '.$selected.'>'.$cc->getCcType().' '.$cc->getCreditCardMask().'</option>';
												endforeach;
												?>
												<option value="new"><?php echo $this->__('New Credit Card') ?></option>
											</select>
										</div>
									</div>
								</li>
								<?php if($num != 1): ?>
									<div id="value_<?php echo $num; ?>_<?php echo $c;?>">
			                        	<li class="fields" style="margin-bottom: 5px;">
			                        		<div class="field">
			                        			<label><?php echo $this->__('Value (Ex: 100,50)') ?> <span class="required">*</span></label>
									        	<div class="input-box">	
									        		<input type="text" id="<?php echo $paymentMethod; ?>_value_<?php echo $num; ?>_<?php echo $c;?>" name="payment[<?php echo $paymentMethod; ?>_value_<?php echo $num; ?>_<?php echo $c;?>]" title="<?php echo $this->__('Value (Ex: 100,50)') ?>" class="required-entry validate-greater-than-zero check_values" onchange="calculateInstallmentValue(this, <?php echo $num;?>, <?php echo $c;?>);" onkeydown="remove_special_characters(event);" value=""/>
									        	</div>
									        </div>
								        </li>
								    </div>
							    <?php endif; ?>
								<?php if ($standard->getConfigData('parcelamento')): ?>
									<div id="parcelamento_<?php echo $num; ?>_<?php echo $c;?>" <?php if(count($ccs) > 1): ?>style="display:none"<?php endif?>>
		                                <li class="fields" style="margin-bottom: 5px;">
		                                	<div class="field">
		                                		<label><?php echo $this->__('Credit options') ?> <?php if($num == 2):?><a href="javascript:void(0);" onclick="calculateInstallmentValue(this, <?php echo $num;?>, <?php echo $c;?>);">(<?php echo $this->__('click to update') ?>)</a><?php endif ?></label>
			                                	<div class="input-box">
			                                		<?php 
				                                	// Não pode parcelar
													if($data->getGrandTotal() < $valorMinParcelamento) {
														$QtdParcelasMax = 1;
				                                	}

				                                	// Não ter valor mínimo para parcelar OU Parcelar a partir de um valor mínimo
				                                	if($valorMinParcelamento == 0) {
				                                		$QtdParcelasMax = $standard->getConfigData('parcelamento_max');
				                                	}

				                                	// Parcelar a partir de um valor mínimo
													if($valorMinParcelamento > 0 && $data->getGrandTotal() >= $valorMinParcelamento) {
														$QtdParcelasMax = $standard->getConfigData('parcelamento_max');
				                                	}	                  	              	

				                                	// Por faixa de valores
				                                	if($valorMinParcelamento == '') {
				                                		$QtdParcelasMax = $standard->getConfigData('parcelamento_max');
				                                	
					                                	$p = 1;

			                							for($p = 1; $p <= $QtdParcelasMax; $p++):
			                								if($p == 1):
			                									$de 		= 0;
																$parcela_de = 0;
			                								else:
			                									$de 		= 'parcelamento_de'.$p;
																$parcela_de = $standard->getConfigData($de);
			                								endif;

			                								$ate = 'parcelamento_ate'.$p;
				                							
				                							if($p < $QtdParcelasMax) {
				                								$parcela_ate = $standard->getConfigData($ate);
				                							}
				                							else {
																$parcela_ate = '1000000000';
				                							}
				                							
				                							if($parcela_de >= 0 && $parcela_ate >= $parcela_de):
				                								if($data->getGrandTotal() >= $parcela_de AND $data->getGrandTotal() <= $parcela_ate):
					                						
					                								$QtdParcelasMax = $p;
					                							endif;
				                							else:
				                								$QtdParcelasMax = $p-1;
				                							endif;
			                							endfor;
				                                	}
				                                    ?>
			                                        <select id="<?php echo $paymentMethod; ?>_credito_parcelamento_<?php echo $num; ?>_<?php echo $c;?>" name="payment[<?php echo $paymentMethod; ?>_credito_parcelamento_<?php echo $num; ?>_<?php echo $c;?>]" class="required-entry">
					                                	<option value="1"><?php echo "1x de " . $currencySymbol.number_format($data->getGrandTotal(), "2", ",", "."); ?></option>
			                							<?php
			                							for ($i = 2; $i <= $QtdParcelasMax; $i++): 
					                                    	$valor = $data->getGrandTotal()/$i;
					                                    ?>
					                                        <option value="<?php echo $i; ?>"><?php echo $i . "x de " . $currencySymbol.number_format((double)$valor, "2", ",", "."); ?> <?php echo $this->__('sem juros') ?></option>
					                                	<?php endfor; ?>
			                                		</select>
				                           		</div>
				                           	</div>
		                        		</li>
                        			</div>
        						<?php endif; ?>
        					<?php endif; ?>

							<div id="new_credit_card_<?php echo $num; ?>_<?php echo $c;?>" <?php if( count($ccs) > 0 ){ ?>style="display:none"<?php } ?>>
							
	                        	<li style="margin-bottom: 5px;">
	                        		<div class="field">
	                        			<label><?php echo $this->__('Credit Card Issuer') ?> <span class="required">*</span></label>
		                        		<div class="input-box">
			                               	<select id="<?php echo $paymentMethod; ?>_<?php echo $num; ?>_<?php echo $c;?>_cc_type" name="payment[<?php echo $paymentMethod; ?>_<?php echo $num; ?>_<?php echo $c;?>_cc_type]" class="required-entry validate-cc-type-select" onchange="cc_cid(this, <?php echo $num; ?>,<?php echo $c;?>);">
		                        				<?php $_ccType = $this->getInfoData('creditCardType') ?>
									            <option value=""></option>
									            <?php $ccards = $standard->getCcTypes();?>
									            <?php foreach($ccards as $ccard): ?>
									                <option value="<?php echo $ccard;?>" <?php if($ccard==$_ccType): ?>selected="selected"<?php endif ?>><?php echo $standard->issuer($ccard);?></option>
									            <?php endforeach ?>
									        </select>
										</div>
									</div>
	                    		</li>
	                    		<li style="margin-bottom: 5px;">
	                    			<div class="field">
	                    				<label><?php echo $this->__('Credit Card Number') ?> <span class="required">*</span></label>
				                    	<div class="input-box">
				                    		<input type="text" id="<?php echo $paymentMethod; ?>_<?php echo $num; ?>_<?php echo $c;?>_cc_number" name="payment[<?php echo $paymentMethod; ?>_<?php echo $num; ?>_<?php echo $c;?>_cc_number]" title="<?php echo $this->__('Credit Card Number') ?>" class="input-text required-entry validate-cc-number" onkeydown="remove_characters(event);" value=""/>
				                    	</div>
				                    </div>
	                			</li>
	                        	<li style="margin-bottom: 5px;">
	                        		<div class="field">
	                        			<label><?php echo $this->__('Credit Card Holder name') ?> <span class="required">*</span></label>
		                                <div class="input-box">
		                                    <input type="text" id="<?php echo $paymentMethod; ?>_cc_holder_name_<?php echo $num; ?>_<?php echo $c;?>" name="payment[<?php echo $paymentMethod; ?>_cc_holder_name_<?php echo $num; ?>_<?php echo $c;?>]" class="required-entry input-text" />
		                                </div>
	                            	</div>
	                    		</li>
			                    <li style="margin-bottom: 5px;">
			                    	<div class="field">
			                    		<label><?php echo $this->__('Expiration date') ?> <span class="required">*</span></label>
				                   		<div class="input-box">
											<div class="v-fix">
												<select id="<?php echo $paymentMethod; ?>_expirationMonth_<?php echo $num; ?>_<?php echo $c;?>" name="payment[<?php echo $paymentMethod; ?>_expirationMonth_<?php echo $num; ?>_<?php echo $c;?>]" style="width: 145px;" class="required-entry validate-cc-exp-mp">
				                                    <option value=""><?php echo $this->__('Month') ?></option>
				                                    <option value="1">01 - <?php echo $this->__('January') ?></option>
				                                    <option value="2">02 - <?php echo $this->__('February') ?></option>
				                                    <option value="3">03 - <?php echo $this->__('March') ?></option>
				                                    <option value="4">04 - <?php echo $this->__('April') ?></option>
				                                    <option value="5">05 - <?php echo $this->__('May') ?></option>
				                                    <option value="6">06 - <?php echo $this->__('June') ?></option>
				                                    <option value="7">07 - <?php echo $this->__('July') ?></option>
				                                    <option value="8">08 - <?php echo $this->__('August') ?></option>
				                                    <option value="9">09 - <?php echo $this->__('September') ?></option>
				                                    <option value="10">10 - <?php echo $this->__('October') ?></option>
				                                    <option value="11">11 - <?php echo $this->__('November') ?></option>
				                                    <option value="12">12 - <?php echo $this->__('December') ?></option>
			                                	</select>
			                                </div>
			                                <div class="v-fix" style="padding-left:6px;">
			                                	<select id="<?php echo $paymentMethod; ?>_expirationYear_<?php echo $num; ?>_<?php echo $c;?>" name="payment[<?php echo $paymentMethod; ?>_expirationYear_<?php echo $num; ?>_<?php echo $c;?>]" style="width: 105px;" class="required-entry validate-cc-exp-mp">
				                                    <option value=""><?php echo $this->__('Year') ?></option>
				                                    <?php 
				                                    $i = date('Y');
				                                    $year = date('Y');
				                                    $year10 = $year + 10;
				                                    for( $i = $year; $i <= $year10; $i++ ):
				                                    ?>
				                                    	<option value="<?php echo substr($i, -2);?>"><?php echo $i;?></option>
				                                    <?php endfor; ?>
			                                	</select>
			                                </div>
			                            </div>
				                	</div>
				                </li>
			                    <li style="margin-bottom: 5px;">
			                    	<div class="field">
			                    		<label><?php echo $this->__('Card Verification Number') ?> <span class="required">*</span></label>
				                    	<div class="input-box">
					                    	<div class="v-fix">
					                    		<input type="text" id="<?php echo $paymentMethod; ?>_cc_cid_<?php echo $num; ?>_<?php echo $c;?>" name="payment[<?php echo $paymentMethod; ?>_cc_cid_<?php echo $num; ?>_<?php echo $c;?>]" style="width: 30px" class="required-entry input-text validate-cc-cvn validate-length" maxlength="4" onkeydown="remove_characters(event);"/>
					                    	</div>
					                    	<div class="v-fix" style="padding-left:6px;">
					                    		<a href="#" class="cvv-what-is-this"><?php echo $this->__('What is this?') ?></a>
					                    	</div>
										</div>
									</div>
								</li>
								<?php if($num != 1): ?>
		                        	<li style="margin-bottom: 5px;">
						        		<div class="field">
						        			<label><?php echo $this->__('Value (Ex: 100,50)') ?> <span class="required">*</span></label>
						        			<div class="input-box">
						        				<input type="text" id="<?php echo $paymentMethod; ?>_new_value_<?php echo $num; ?>_<?php echo $c;?>" name="payment[<?php echo $paymentMethod; ?>_new_value_<?php echo $num; ?>_<?php echo $c;?>]" title="<?php echo $this->__('Value (Ex: 100,50)') ?>" class="required-entry validate-greater-than-zero check_values" onchange="calculateInstallmentValue(this, <?php echo $num;?>, <?php echo $c;?>);" onkeydown="remove_special_characters(event);" value=""/>
						        			</div>
						        		</div>
							        </li>
							    <?php endif; ?>
	                			<?php if ($standard->getConfigData('parcelamento')): ?>
	                                <li style="margin-bottom: 5px;">
	                                	<div class="field">
	                                		<label><?php echo $this->__('Credit options') ?> <?php if($num ==2): ?><a href="javascript:void(0);" onclick="calculateInstallmentValue(this, <?php echo $num;?>, <?php echo $c;?>);">(<?php echo $this->__('click to update') ?>)</a><?php endif ?></label>
		                                	<div class="input-box">
		                                		<?php 
			                                	$data = $standard->getQuote()->getShippingAddress();

			                            		// Não pode parcelar
												if($data->getGrandTotal() < $valorMinParcelamento) {
													$QtdParcelasMax = 1;
			                                	}

			                                	// Não ter valor mínimo para parcelar OU Parcelar a partir de um valor mínimo
			                                	if($valorMinParcelamento == 0):
			                                		$QtdParcelasMax = $standard->getConfigData('parcelamento_max');
			                                	endif;

			                                	// Parcelar a partir de um valor mínimo
												if($valorMinParcelamento > 0 && $data->getGrandTotal() >= $valorMinParcelamento):
													$QtdParcelasMax = $standard->getConfigData('parcelamento_max');
			                                	endif;                  	              	

			                                	// Por faixa de valores
			                                	if($valorMinParcelamento == ''):
			                                		$QtdParcelasMax = $standard->getConfigData('parcelamento_max');
			                                	
				                                	$p = 1;

		                							for($p = 1; $p <= $QtdParcelasMax; $p++):
		                								if($p == 1):
		                									$de 		= 0;
															$parcela_de = 0;
		                								else:
		                									$de 		= 'parcelamento_de'.$p;
															$parcela_de = $standard->getConfigData($de);
		                								endif;

		                								$ate 			= 'parcelamento_ate'.$p;
			                							
			                							if($p < $QtdParcelasMax) {
			                								$parcela_ate = $standard->getConfigData($ate);
			                							}
			                							else {
															$parcela_ate = '1000000000';
			                							}
			                							
			                							if($parcela_de >= 0 && $parcela_ate >= $parcela_de):
			                								if($data->getGrandTotal() >= $parcela_de AND $data->getGrandTotal() <= $parcela_ate):
				                						
				                								$QtdParcelasMax = $p;
				                							endif;
			                							else:
			                								$QtdParcelasMax = $p-1;
			                							endif;
		                							endfor;
			                                	endif;
			                                    ?>
		                                        <select id="<?php echo $paymentMethod; ?>_new_credito_parcelamento_<?php echo $num; ?>_<?php echo $c;?>" name="payment[<?php echo $paymentMethod; ?>_new_credito_parcelamento_<?php echo $num; ?>_<?php echo $c;?>]" class="required-entry">
				                                	<option value="1"><?php echo "1x de " . $currencySymbol.number_format($data->getGrandTotal(), "2", ",", "."); ?></option>
		                							<?php
		                							for ($i = 2; $i <= $QtdParcelasMax; $i++): 
				                                    	$valor = $data->getGrandTotal()/$i;
				                                    ?>
				                                        <option value="<?php echo $i; ?>"><?php echo $i . "x de " . $currencySymbol.number_format((double)$valor, "2", ",", "."); ?> <?php echo $this->__('sem juros') ?></option>
				                                	<?php endfor; ?>
		                                		</select>
			                           		</div> 
			                           	</div>
	                        		</li>
	            				<?php endif; ?>
	            				<?php if ($standard->getConfigData('clearsale') && !$_taxvat->isEnabled()): ?>
		        					<li style="margin-bottom: 5px;">
		        						<div class="field">
		        							<label><?php echo $this->__('CPF ou CNPJ') ?> <span class="required">*</span></label>
								        	<div class="input-box">
								        		<input type="text" id="<?php echo $paymentMethod; ?>_cc_taxvat_<?php echo $num; ?>_<?php echo $c;?>" name="payment[<?php echo $paymentMethod; ?>_cc_taxvat_<?php echo $num; ?>_<?php echo $c;?>]" title="<?php echo $this->__('CPF ou CNPJ') ?>" class="validar_cpf required-entry" onkeydown="remove_characters(event);"/>
								        	</div>
								        </div>
							        </li>
						    	<?php endif;?>
						    	<?php if($standard->getQuote()->getCheckoutMethod() != 'guest'): ?>
						    	<li>
		               				<div class="input-box" style="padding-top: 10px">
		               					<div class="field">
		                        			<label><?php echo $this->__('Save Card On File') ?></label>
		                        			<input type="checkbox" id="<?php echo $paymentMethod; ?>_save_token_<?php echo $num; ?>_<?php echo $c;?>" name="payment[<?php echo $paymentMethod; ?>_save_token_<?php echo $num; ?>_<?php echo $c;?>]" value="new"/>
		                        		</div>
		                        	</div>
		                        </li>
		                    	<?php endif; ?>
					    	</div>
					    <?php endfor; ?> 
                    </ul>
                </div>
	        </li> 
    		<?php endif ?>
    	<?php endforeach ?>
    	<?php // END CREDIT CARD PAYMENT METHOD ?>

        <?php if ( in_array("BoletoBancario", $standard->getPaymentMethods()) ): ?>
	        <li>
	            <?php if( count($standard->getPaymentMethods()) > 1 ): ?>
		            <label>
		            	<input onclick="hide_methods(mundipagg_boleto);" type="radio" id="mundipagg_type" name="payment[mundipagg_type]" title="<?php echo $this->__('Boleto Bancário') ?>" value="BoletoBancario" class="radio <?php echo $js_class;?>" <?php if(count($standard->getPaymentMethods()) == 1){echo 'checked="checked"';}?>> <?php echo $this->__('Boleto Bancário') ?> 
		            </label>
	        	<?php else: ?>
	        		<input type="hidden" id="mundipagg_type" name="payment[mundipagg_type]" value="BoletoBancario"/>
	        	<?php endif; ?>
	            <br/>
	            <div id="mundipagg_boleto" style="<?php echo $style;?>">
		            <ul style="margin-left: 18px;">
		            	<?php if(!$_taxvat->isEnabled()): ?>
				        <li>
				        	<div class="input-box" style="float:left;">	
				        		<label><?php echo $this->__('CPF ou CNPJ') ?> <span class="required">*</span></label><br/>
				        		<input type="text" id="<?php echo $_code ?>_boleto_taxvat" name="payment[boleto_taxvat]" title="<?php echo $this->__('Taxvat') ?>" class="validar_cpf required-entry" onkeydown="remove_characters(event);"/>
				        	</div>
				        </li>
				    	<?php endif; ?>
				        <li>
			                <div id="boleto" style="float:left; text-align:center">
					            <img src="<?php echo $this->getSkinUrl('images/mundipagg/boleto.jpg');?>" alt="<?php echo $this->__('Boleto Bancário') ?>" /> <?php echo $this->__('Print your boleto after you have placed your order.') ?>
			                </div>
				        </li>
			        </ul>
		    	</div>
			</li>
		<?php endif ?>
	</ul>
</fieldset>

<script type="text/javascript">
//<![CDATA[
<?php if (!$_taxvat->isEnabled()): ?>
function validaCPF(cpf,pType) {
	if (Validation.get('IsEmpty').test(cpf)) {
        return false;
    } 

	var valid = true;
    var cpf = cpf.replace(/[.\//-]/g,'');

    if(cpf.length != 11 || cpf == "00000000000" || cpf == "11111111111" || cpf == "22222222222" || cpf == "33333333333" || cpf == "44444444444" || cpf == "55555555555" || cpf == "66666666666" || cpf == "77777777777" || cpf == "88888888888" || cpf == "99999999999")
    valid = false;
    add = 0;
    for (i=0; i < 9; i ++)
    add += parseInt(cpf.charAt(i)) * (10 - i);
    rev = 11 - (add % 11);
    if (rev == 10 || rev == 11)
    rev = 0;
    if (rev != parseInt(cpf.charAt(9)))
    valid = false;
    add = 0;
    for (i = 0; i < 10; i ++)
    add += parseInt(cpf.charAt(i)) * (11 - i);
    rev = 11 - (add % 11);
    if (rev == 10 || rev == 11)
    rev = 0;
    if (rev != parseInt(cpf.charAt(10)))
    valid = false;

    if(valid) {
        return true;
    }        

	if (cpf.length >= 14){
		if ( cpf.substring(12,14) == checkCNPJ( cpf.substring(0,12) ) ) {
			return true;
		}
	}

    return false;
}

function checkCNPJ(vCNPJ) {
	var mControle = "";
	var aTabCNPJ = new Array(5,4,3,2,9,8,7,6,5,4,3,2);
	for (i = 1 ; i <= 2 ; i++){
		mSoma = 0;
		for (j = 0 ; j < vCNPJ.length ; j++)
		mSoma = mSoma + (vCNPJ.substring(j,j+1) * aTabCNPJ[j]);
		if (i == 2 ) mSoma = mSoma + ( 2 * mDigito );
		mDigito = ( mSoma * 10 ) % 11;
		if (mDigito == 10 ) mDigito = 0;
		mControle1 = mControle ;
		mControle = mDigito;
		aTabCNPJ = new Array(6,5,4,3,2,9,8,7,6,5,4,3);
	}

	return( (mControle1 * 10) + mControle );
}
<?php endif; ?>

Number.prototype.formatMoney = function(decPlaces, thouSeparator, decSeparator) {
    var n = this,
    decPlaces = isNaN(decPlaces = Math.abs(decPlaces)) ? 2 : decPlaces,
    decSeparator = decSeparator == undefined ? "." : decSeparator,
    thouSeparator = thouSeparator == undefined ? "," : thouSeparator,
    sign = n < 0 ? "-" : "",
    i = parseFloat(n = Math.abs(+n || 0).toFixed(decPlaces)) + "",
    j = (j = i.length) > 3 ? j % 3 : 0;
    return sign + (j ? i.substr(0, j) + thouSeparator : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thouSeparator) + (decPlaces ? decSeparator + Math.abs(n - i).toFixed(decPlaces).slice(2) : "");
};

function remove_characters(event) {
    // Allow: backspace, delete, tab, escape, and enter
    if ( event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || 
         // Allow: Ctrl+A
        (event.keyCode == 65 && event.ctrlKey === true) || 
         // Allow: home, end, left, right
        (event.keyCode >= 35 && event.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
    }
    else {
        // Ensure that it is a number and stop the keypress
        if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105 )) {
            event.preventDefault(); 
        }   
    }
}

function remove_special_characters(event) {
	// Allow: backspace, delete, tab, escape, comma and enter
    if ( event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 188 || event.keyCode == 13 || 
         // Allow: Ctrl+A
        (event.keyCode == 65 && event.ctrlKey === true) || 
         // Allow: home, end, left, right
        (event.keyCode >= 35 && event.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
    }
    else {
        // Ensure that it is a number and stop the keypress
        if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105 )) {
            event.preventDefault(); 
        }   
    }
}

if(Validation) {  
	Validation.add('validar_cpf', 'O CPF ou CNPJ informado \xE9 inválido', function(v){return validaCPF(v,0);});

    /**
	 * Hash with credit card types which can be simply extended in payment modules
	 * 0 - regexp for card number
	 * 1 - regexp for cvn
	 * 2 - check or not credit card number trough Luhn algorithm by
	 *     function validateCreditCard which you can find above in this file
	 */
	Validation.creditCartTypes = $H({
	    'VI': [new RegExp('^4[0-9]{12}([0-9]{3})?$'), new RegExp('^[0-9]{3}$'), true],
	    'MC': [new RegExp('^5[1-5][0-9]{14}$'), new RegExp('^[0-9]{3}$'), true],
	    'AE': [new RegExp('^3[47][0-9]{13}$'), new RegExp('^[0-9]{4}$'), true],
	    'DI': [false, new RegExp('^[0-9]{3}$'), true],
	    'OT': [false, new RegExp('^([0-9]{3}|[0-9]{4})?$'), false],
	    'EL': [false, new RegExp('^([0-9]{3})?$'), true],
	    'HI': [false, new RegExp('^([0-9]{3})?$'), false]
	});

	Validation.add('check_values', 'Confira os valores a passar em cada cartão', function(){return check_values();});
}

function token_or_not(num,c) {
	<?php if(count($standard->getPaymentMethods())>1): ?>
 	var type = $$('input:checked[type="radio"][name="payment\\[mundipagg_type\\]"]').pluck('value');
	<?php else: ?>
	var type = $$('input[name="payment\\[mundipagg_type\\]"]').pluck('value');
	<?php endif; ?>

	if( document.getElementById(type+'_token_'+num+'_'+c).value == 'new' ) {
		$('new_credit_card_'+num+'_'+c).show();
		<?php if ($standard->getConfigData('parcelamento')): ?>$('parcelamento_'+num+'_'+c).hide();<?php endif; ?>
		
		if($('value_'+num+'_'+c)){
			$('value_'+num+'_'+c).hide();
		}
	}
	else {
		$('new_credit_card_'+num+'_'+c).hide();
		<?php if ($standard->getConfigData('parcelamento')): ?>$('parcelamento_'+num+'_'+c).show();<?php endif; ?>

		if($('value_'+num+'_'+c)){
			$('value_'+num+'_'+c).show();
		}
	}
}

function cc_cid(field, num, c) {
	<?php if(count($standard->getPaymentMethods())>1): ?>
 	var type = $$('input:checked[type="radio"][name="payment\\[mundipagg_type\\]"]').pluck('value');
	<?php else: ?>
	var type = $$('input[name="payment\\[mundipagg_type\\]"]').pluck('value');
	<?php endif; ?>
	var cc_cid = document.getElementById(type+'_cc_cid_'+num+'_'+c);

	if(field.value == 'AE') {
		cc_cid.removeClassName('minimum-length-3');
		cc_cid.removeClassName('maximum-length-3');
		cc_cid.addClassName('minimum-length-4');
		cc_cid.addClassName('maximum-length-4');
	}
	else {
		cc_cid.removeClassName('minimum-length-4');
		cc_cid.removeClassName('maximum-length-4');
		cc_cid.addClassName('minimum-length-3');
		cc_cid.addClassName('maximum-length-3');
	}
}

function hide_methods(dont_hide) {
	<?php
	foreach ($paymentMethods as $key => $paymentMethod):
	?>
		if(document.getElementById('<?php echo $paymentMethod; ?>')!= null && dont_hide != '<?php echo $paymentMethod; ?>'){
			document.getElementById('<?php echo $paymentMethod; ?>').style.display='none';
		}
	<?php
	endforeach;
	?>

	$(dont_hide).show();
}

function calculateInstallmentValue(field, num, c) {
	<?php if(count($standard->getPaymentMethods())>1): ?>
 	var type = $$('input:checked[type="radio"][name="payment\\[mundipagg_type\\]"]').pluck('value');
	<?php else: ?>
	var type = $$('input[name="payment\\[mundipagg_type\\]"]').pluck('value');
	<?php endif; ?>
	var total = $('baseGrandTotal').value;
	var total_oc = parseFloat(total.replace(',','.'));
	var field_id = type + '_credito_parcelamento_' + num + '_' + c;
	var field_id_new = type + '_new_credito_parcelamento_' + num + '_' + c;
	var rest = '';
	var response = '';
	var vfield = field.value;
	var vfield_oc = parseFloat(vfield.replace(',', '.'));
	
	if(vfield_oc >= total_oc) {
		vfield_oc = total_oc - (total_oc - 0.01);
	}

	if(parseFloat(vfield_oc)) {
		installments(field_id, field_id_new, num, c, vfield_oc);

		// If more than 2 decimals we reduce to 2 
		$(field).value = (vfield_oc.toFixed(2)).replace('.',',');

		// If two Credit Cards we can deduct second credit card installments
		if(type == '2CreditCards' && num == 2) {
			new_value_oc = (total.replace(',', '.') - vfield_oc).toFixed(2);
			new_value =  String(new_value_oc).replace('.',',');
			
			if(c != 2) {
				if( typeof($$('#' + type[0] + ' #' + type[0] + '_value_2_2')[0]) != 'undefined') {
					$$('#' + type[0] + ' #' + type[0] + '_value_2_2')[0].value = new_value;
				}

				$$('#' + type[0] + ' #' + type[0] + '_new_value_2_2')[0].value = new_value;

				installments(type[0] + '_credito_parcelamento_2_2', type[0] + '_new_credito_parcelamento_2_2', num, c, new_value_oc);
			}
			
			if(c != 1) {
				if( typeof($$('#' + type[0] + ' #' + type[0] + '_value_2_1')[0]) != 'undefined') {
					$$('#' + type[0] + ' #' + type[0] + '_value_2_1')[0].value = new_value;
				}

				$$('#' + type[0] + ' #' + type[0] + '_new_value_2_1')[0].value = new_value;

				installments(type[0] + '_credito_parcelamento_2_1', type[0] + '_new_credito_parcelamento_2_1', num, c, new_value_oc);
			}
		}
	}
}

function installments(field, field_new, num, c, val) {
	if(!isNaN(parseFloat(val)) && isFinite(val) && val > 0) {
		new Ajax.Request('<?php echo $this->getUrl('mundipagg/standard/installments', array('_secure' => true)) ?>', {
			method: 'post',
			parameters: {val: val},
			onSuccess: function(response) {
				if (200 == response.status){
					var result = eval("(" + response.responseText + ")");

					var installments = result.QtdParcelasMax;

					if(installments != null) {
						if(document.getElementById(field) != null) {
							document.getElementById(field).options.length = 0;
						}

						if(document.getElementById(field_new) != null) {
							document.getElementById(field_new).options.length = 0;
						}

						for(var i = 1;i<=installments;i++) {
							var amount = val / i;
							amount = (amount.toFixed(2)).replace('.',',');

							if(i == 1) {
								var label = i + '<?php echo "x de " . $currencySymbol; ?>' + amount;
							}
							else {
								var label = i + '<?php echo "x de " . $currencySymbol; ?>' + amount + " <?php echo $this->__('sem juros') ?>";
							}
							
							if(document.getElementById(field) != null) {
								$(field).options[$(field).options.length] = new Option(label, i);
					    	}

					    	if(document.getElementById(field_new) != null) {
					    		$(field_new).options[$(field_new).options.length] = new Option(label, i);
					    	}
					   	}
					}
					else {
						if(document.getElementById(field) != null) {
							document.getElementById(field).options.length = 0;
						}

						alert('<?php echo $this->__("A parcela minima é de $currencySymbol$valorMinParcelamento"); ?>');
					}
			    }
			},
			onFailure: function(response) {
				alert('<?php echo $this->__("Try again!"); ?>');
			}
		});
	}
}

function check_values() {
	<?php if(count($standard->getPaymentMethods())>1): ?>
 	var type = $$('input:checked[type="radio"][name="payment\\[mundipagg_type\\]"]').pluck('value');
	<?php else: ?>
	var type = $$('input[name="payment\\[mundipagg_type\\]"]').pluck('value');
	<?php endif; ?>
	var num = type[0].substring(0, 1);
	var total = ($('baseGrandTotal').value).replace(',','.');
	var total_fields = 0.00;
	var total_fields_new = 0.00;

	for(var i=1;i<=num;i++){
		if(document.getElementById(type[0]+'_value_'+ num +'_'+ i) != null) {
			var fieldv = ($(type[0]+'_value_'+ num +'_'+ i).value).replace(',','.');
			
			total_fields = parseFloat(fieldv) + parseFloat(total_fields);
		}

		if(document.getElementById(type[0]+'_new_value_'+ num +'_'+ i) != null) {
			var fieldv_new = ($(type[0]+'_new_value_'+ num +'_'+ i).value).replace(',','.');

			total_fields_new = parseFloat(fieldv_new) + parseFloat(total_fields_new);	
		}
	}

	if( (Math.abs(total - total_fields) < 0.000001) &&  (Math.abs(total - total_fields_new) < 0.000001) ) {
		return false;
	}
	
	return true;
}
//]]>
</script>